{"cells":[{"cell_type":"markdown","metadata":{"id":"rQW4vJlo0saq"},"source":["#Machine Learning Model\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18019,"status":"ok","timestamp":1714802435385,"user":{"displayName":"Cindy Huynh","userId":"13008750495861752240"},"user_tz":300},"id":"qI-qy0fGIVuE","outputId":"f925ad40-c910-4005-ee15-e652c76d762b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","/content/drive/.shortcut-targets-by-id/1hiAuqfreGL6LOK3TaTCcr_I7tHeHvhdA/Data_Science_Girlies\n"]}],"source":["# Mount Google Drive/Folder containing Dataset\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","%cd '/content/drive/MyDrive/I310D/Data_Science_Girlies'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BENwCKbgb8wL"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_squared_error\n","from sklearn.metrics import r2_score\n","from encoding_module import featurize"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":629,"status":"ok","timestamp":1714802530806,"user":{"displayName":"Cindy Huynh","userId":"13008750495861752240"},"user_tz":300},"id":"R_4FnpiZI7lb","outputId":"dc0e2e63-a7d5-4835-86e5-9dffb5ba89ad"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1000 entries, 0 to 999\n","Data columns (total 12 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   age           1000 non-null   int64 \n"," 1   gender        1000 non-null   object\n"," 2   time_spent    1000 non-null   int64 \n"," 3   platform      1000 non-null   object\n"," 4   interests     1000 non-null   object\n"," 5   location      1000 non-null   object\n"," 6   demographics  1000 non-null   object\n"," 7   profession    1000 non-null   object\n"," 8   income        1000 non-null   int64 \n"," 9   indebt        1000 non-null   bool  \n"," 10  isHomeOwner   1000 non-null   bool  \n"," 11  Owns_Car      1000 non-null   bool  \n","dtypes: bool(3), int64(3), object(6)\n","memory usage: 73.4+ KB\n"]},{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":4}],"source":["# Importing dataset as CSV file\n","dummy_df = pd.read_csv('/content/drive/MyDrive/I310D/Data_Science_Girlies/dummy_data.csv')\n","# Print feature values and their data type/frequency counts\n","dummy_df.info()\n","\n","# Check for Duplicates/Null Cells\n","dummy_df.isnull().sum()\n","dummy_df.duplicated().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":113,"status":"ok","timestamp":1714802532554,"user":{"displayName":"Cindy Huynh","userId":"13008750495861752240"},"user_tz":300},"id":"vZ8lvdvEadxG","outputId":"5616cf76-417d-4ccb-cab6-b91d6b1e6617"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age      gender  time_spent   platform  interests        location  \\\n","0   56        male           3  Instagram     Sports  United Kingdom   \n","1   46      female           2   Facebook     Travel  United Kingdom   \n","2   32        male           8  Instagram     Sports       Australia   \n","3   60  non-binary           5  Instagram     Travel  United Kingdom   \n","4   25        male           1  Instagram  Lifestlye       Australia   \n","\n","  demographics         profession  income  indebt  isHomeOwner  Owns_Car  \\\n","0        Urban  Software Engineer   19774    True        False     False   \n","1        Urban            Student   10564    True         True      True   \n","2    Sub_Urban   Marketer Manager   13258   False        False     False   \n","3        Urban            Student   12500   False         True     False   \n","4        Urban  Software Engineer   14566   False         True      True   \n","\n","  age_range income_type  \n","0       Old        Rich  \n","1     Adult        Poor  \n","2     Young        Poor  \n","3       Old        Poor  \n","4     Young         Mid  "],"text/html":["\n","  <div id=\"df-f7923407-9ba6-4262-8f19-86b72f1db914\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>gender</th>\n","      <th>time_spent</th>\n","      <th>platform</th>\n","      <th>interests</th>\n","      <th>location</th>\n","      <th>demographics</th>\n","      <th>profession</th>\n","      <th>income</th>\n","      <th>indebt</th>\n","      <th>isHomeOwner</th>\n","      <th>Owns_Car</th>\n","      <th>age_range</th>\n","      <th>income_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>56</td>\n","      <td>male</td>\n","      <td>3</td>\n","      <td>Instagram</td>\n","      <td>Sports</td>\n","      <td>United Kingdom</td>\n","      <td>Urban</td>\n","      <td>Software Engineer</td>\n","      <td>19774</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Old</td>\n","      <td>Rich</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>46</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>Facebook</td>\n","      <td>Travel</td>\n","      <td>United Kingdom</td>\n","      <td>Urban</td>\n","      <td>Student</td>\n","      <td>10564</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>Adult</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>32</td>\n","      <td>male</td>\n","      <td>8</td>\n","      <td>Instagram</td>\n","      <td>Sports</td>\n","      <td>Australia</td>\n","      <td>Sub_Urban</td>\n","      <td>Marketer Manager</td>\n","      <td>13258</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>Young</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>60</td>\n","      <td>non-binary</td>\n","      <td>5</td>\n","      <td>Instagram</td>\n","      <td>Travel</td>\n","      <td>United Kingdom</td>\n","      <td>Urban</td>\n","      <td>Student</td>\n","      <td>12500</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>Old</td>\n","      <td>Poor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>Instagram</td>\n","      <td>Lifestlye</td>\n","      <td>Australia</td>\n","      <td>Urban</td>\n","      <td>Software Engineer</td>\n","      <td>14566</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>Young</td>\n","      <td>Mid</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7923407-9ba6-4262-8f19-86b72f1db914')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f7923407-9ba6-4262-8f19-86b72f1db914 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f7923407-9ba6-4262-8f19-86b72f1db914');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d1d90772-d198-4c16-bfdd-2074aa58907f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d1d90772-d198-4c16-bfdd-2074aa58907f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d1d90772-d198-4c16-bfdd-2074aa58907f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dummy_df","summary":"{\n  \"name\": \"dummy_df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 18,\n        \"max\": 64,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          24,\n          48,\n          54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"male\",\n          \"female\",\n          \"non-binary\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_spent\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          6,\n          2,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"platform\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Instagram\",\n          \"Facebook\",\n          \"YouTube\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"interests\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Sports\",\n          \"Travel\",\n          \"Lifestlye\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"United Kingdom\",\n          \"Australia\",\n          \"United States\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"demographics\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Urban\",\n          \"Sub_Urban\",\n          \"Rural\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"profession\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Software Engineer\",\n          \"Student\",\n          \"Marketer Manager\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2958,\n        \"min\": 10012,\n        \"max\": 19980,\n        \"num_unique_values\": 955,\n        \"samples\": [\n          11752,\n          10600,\n          13862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"indebt\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isHomeOwner\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Owns_Car\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age_range\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Old\",\n          \"Adult\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Rich\",\n          \"Poor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}],"source":["# Divide 'age' and 'income' data into 3 quantiles\n","dummy_df['age_range'] = pd.qcut(dummy_df['age'], q=3, labels=['Young', 'Adult', 'Old'])\n","dummy_df['income_type'] = pd.qcut(dummy_df['income'], q=3, labels=['Poor', 'Mid', 'Rich'])\n","\n","# Display the new values within dataset\n","dummy_df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"101b9VUnlN6R"},"outputs":[],"source":["# Encoding features into numerical types using featurize() // ONLY RUN ONCE\n","encoded_df = featurize(dummy_df)"]},{"cell_type":"code","source":["encoded_df"],"metadata":{"id":"fSrM06E0fRyb","executionInfo":{"status":"ok","timestamp":1714807460746,"user_tz":300,"elapsed":225,"user":{"displayName":"Cindy Huynh","userId":"13008750495861752240"}},"outputId":"c9beae65-e6bb-494c-d215-2af941fe6002","colab":{"base_uri":"https://localhost:8080/","height":424}},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     gender  platform  interests  location  demographics  profession  indebt  \\\n","0         1         1          1         1             2           1       1   \n","1         0         0          2         1             2           2       1   \n","2         1         1          1         0             1           0       0   \n","3         2         1          2         1             2           2       0   \n","4         1         1          0         0             2           1       0   \n","..      ...       ...        ...       ...           ...         ...     ...   \n","995       0         1          0         1             0           0       0   \n","996       2         2          2         1             0           1       1   \n","997       2         2          2         1             0           2       1   \n","998       0         2          1         0             1           0       1   \n","999       0         2          2         0             0           2       0   \n","\n","     isHomeOwner  Owns_Car  age_range  income_type  \n","0              0         0          1            2  \n","1              1         1          0            1  \n","2              0         0          2            1  \n","3              1         0          1            1  \n","4              1         1          2            0  \n","..           ...       ...        ...          ...  \n","995            1         0          2            2  \n","996            0         0          0            1  \n","997            0         1          2            2  \n","998            1         0          1            0  \n","999            1         0          2            0  \n","\n","[1000 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-e4bbdb99-77dc-46cd-994d-1a60e6f94c9b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>platform</th>\n","      <th>interests</th>\n","      <th>location</th>\n","      <th>demographics</th>\n","      <th>profession</th>\n","      <th>indebt</th>\n","      <th>isHomeOwner</th>\n","      <th>Owns_Car</th>\n","      <th>age_range</th>\n","      <th>income_type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4bbdb99-77dc-46cd-994d-1a60e6f94c9b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4bbdb99-77dc-46cd-994d-1a60e6f94c9b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4bbdb99-77dc-46cd-994d-1a60e6f94c9b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c09b4e9e-eaf7-4491-80b4-f51e928c19f8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c09b4e9e-eaf7-4491-80b4-f51e928c19f8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c09b4e9e-eaf7-4491-80b4-f51e928c19f8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_31057d2a-e28a-4ad4-8688-5310efb31dd6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('encoded_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_31057d2a-e28a-4ad4-8688-5310efb31dd6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('encoded_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"encoded_df","summary":"{\n  \"name\": \"encoded_df\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"gender\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"platform\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"interests\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"demographics\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"profession\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          2,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"indebt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isHomeOwner\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Owns_Car\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age_range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":94,"status":"ok","timestamp":1714802536053,"user":{"displayName":"Cindy Huynh","userId":"13008750495861752240"},"user_tz":300},"id":"I-oVD4KzdMXv","outputId":"a707fd33-b20c-45a3-f8f3-30b385b54ccb"},"outputs":[{"output_type":"stream","name":"stdout","text":["Featurized Dataset\n","      age  gender  time_spent  platform  interests  location  demographics  \\\n","0     56       0           3         0          0         1             0   \n","1     46       1           2         1          1         1             0   \n","2     32       0           8         0          0         2             1   \n","3     60       2           5         0          1         1             0   \n","4     25       0           1         0          2         2             0   \n","..   ...     ...         ...       ...        ...       ...           ...   \n","995   22       1           8         0          2         1             2   \n","996   40       2           6         2          1         1             2   \n","997   27       2           5         2          1         1             2   \n","998   61       1           4         2          0         2             1   \n","999   19       1           8         2          1         2             2   \n","\n","     profession  income  indebt  isHomeOwner  Owns_Car age_range income_type  \n","0             0   19774       1            0         0         2           2  \n","1             1   10564       1            1         1         1           0  \n","2             2   13258       0            0         0         0           0  \n","3             1   12500       0            1         0         2           0  \n","4             0   14566       0            1         1         0           1  \n","..          ...     ...     ...          ...       ...       ...         ...  \n","995           2   18536       0            1         0         0           2  \n","996           0   12711       1            0         0         1           0  \n","997           1   17595       1            0         1         0           2  \n","998           2   16273       1            1         0         2           1  \n","999           1   16284       0            1         0         0           1  \n","\n","[1000 rows x 14 columns]\n","--------------------------------------------------------------------------------\n","Adjusted Training Dataset\n","      gender  time_spent  platform  interests  location  demographics  \\\n","0         0           3         0          0         1             0   \n","1         1           2         1          1         1             0   \n","2         0           8         0          0         2             1   \n","3         2           5         0          1         1             0   \n","4         0           1         0          2         2             0   \n","..      ...         ...       ...        ...       ...           ...   \n","995       1           8         0          2         1             2   \n","996       2           6         2          1         1             2   \n","997       2           5         2          1         1             2   \n","998       1           4         2          0         2             1   \n","999       1           8         2          1         2             2   \n","\n","     profession  indebt  isHomeOwner  Owns_Car age_range income_type  \n","0             0       1            0         0         2           2  \n","1             1       1            1         1         1           0  \n","2             2       0            0         0         0           0  \n","3             1       0            1         0         2           0  \n","4             0       0            1         1         0           1  \n","..          ...     ...          ...       ...       ...         ...  \n","995           2       0            1         0         0           2  \n","996           0       1            0         0         1           0  \n","997           1       1            0         1         0           2  \n","998           2       1            1         0         2           1  \n","999           1       0            1         0         0           1  \n","\n","[1000 rows x 12 columns]\n","--------------------------------------------------------------------------------\n","Dataset (Features)\n","      gender  platform  interests  location  demographics  profession  indebt  \\\n","0         0         0          0         1             0           0       1   \n","1         1         1          1         1             0           1       1   \n","2         0         0          0         2             1           2       0   \n","3         2         0          1         1             0           1       0   \n","4         0         0          2         2             0           0       0   \n","..      ...       ...        ...       ...           ...         ...     ...   \n","995       1         0          2         1             2           2       0   \n","996       2         2          1         1             2           0       1   \n","997       2         2          1         1             2           1       1   \n","998       1         2          0         2             1           2       1   \n","999       1         2          1         2             2           1       0   \n","\n","     isHomeOwner  Owns_Car age_range income_type  \n","0              0         0         2           2  \n","1              1         1         1           0  \n","2              0         0         0           0  \n","3              1         0         2           0  \n","4              1         1         0           1  \n","..           ...       ...       ...         ...  \n","995            1         0         0           2  \n","996            0         0         1           0  \n","997            0         1         0           2  \n","998            1         0         2           1  \n","999            1         0         0           1  \n","\n","[1000 rows x 11 columns]\n","--------------------------------------------------------------------------------\n","Dataset (Target)\n","0      3\n","1      2\n","2      8\n","3      5\n","4      1\n","      ..\n","995    8\n","996    6\n","997    5\n","998    4\n","999    8\n","Name: time_spent, Length: 1000, dtype: int64\n","--------------------------------------------------------------------------------\n","Shape of Features\n"," (1000, 11)\n","Shape of Target\n"," (1000,)\n"]}],"source":["divider = '-' * 80\n","\n","# Review DataFrame with Encoded Features\n","print(f'Featurized Dataset\\n {encoded_df}\\n{divider}')\n","\n","# Drop 'age' and 'income' from DataFrame (only keep data you needed)\n","training_dataset = encoded_df.drop(columns=['age','income'], axis=1)\n","print(f'Adjusted Training Dataset\\n {training_dataset}\\n{divider}')\n","\n","# Set Up X and Y Datasets for Training\n","x_dataset = training_dataset.drop('time_spent', axis=1)\n","y_dataset = training_dataset['time_spent']\n","\n","# Review X and Y Datasets\n","print(f'Dataset (Features)\\n {x_dataset}\\n{divider}')\n","print(f'Dataset (Target)\\n{y_dataset}\\n{divider}')\n","\n","# Check Dataset Shapes to Ensure Correct Dimensionality\n","print(f'Shape of Features\\n {x_dataset.shape}')\n","print(f'Shape of Target\\n {y_dataset.shape}')\n","\n","# Split Dataset into Training and Testing Dataset\n","x_train, x_test, y_train, y_test = train_test_split(x_dataset, y_dataset, test_size=0.2, random_state=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YitDZSxofmYC"},"outputs":[],"source":["# Initialize and Train the Model\n","model = LinearRegression()\n","model.fit(x_train, y_train)\n","\n","# Make Predictions from Testing Set\n","y_pred = model.predict(x_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":127,"status":"ok","timestamp":1714793675760,"user":{"displayName":"Cindy Huynh","userId":"13008750495861752240"},"user_tz":300},"id":"Al_FJgdMjGYS","outputId":"17909d1a-c68c-4879-bebc-25877112ef32"},"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Square Error: 2.5171909900087757\n"]}],"source":["# Mean Squared Error (The closer to 0, the higher the accuracy)\n","mse = mean_squared_error(y_test, y_pred)\n","rmse = np.sqrt(mse)\n","\n","# R2 Score (Highest R2 Score is 1)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Root Mean Square Error:\", rmse)\n","# print('R-Score:', r2)"]},{"cell_type":"markdown","metadata":{"id":"ECL3TRTg3BVU"},"source":["# Evaluating the ML Model"]},{"cell_type":"markdown","metadata":{"id":"N44xIFsx-APK"},"source":["#ML Model Input Demo"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":133,"status":"ok","timestamp":1714795670575,"user":{"displayName":"Cindy Huynh","userId":"13008750495861752240"},"user_tz":300},"id":"h0kMMKuRzN2N","outputId":"17ae4d92-4644-4e1f-c1e4-5d803959a160"},"outputs":[{"output_type":"stream","name":"stdout","text":["Input Data\n","    age  gender  platform interests       location demographics profession  \\\n","0   20  female  Facebook    Travel  United States        Urban    Student   \n","\n","    income  indebt  isHomeOwner  Owns_Car  \n","0  1000000   False         True      True  \n","--------------------------------------------------------------------------------\n","Predicted screen time from Linear Regression Model: 4.939374163984049 hours\n"]}],"source":["# UI Fields\n","age = 20 # @param {type:\"number\"}\n","gender = 'female' # @param [\"male\", \"female\", \"non-binary\"]\n","platform = 'Facebook' # @param [\"Instagram\", \"Facebook\", \"YouTube\"]\n","interests = \"Travel\" # @param [\"Sports\", \"Travel\", \"Lifestlye\"]\n","location = 'United States' # @param [\"United States\", \"United Kingdom\", \"Australia\"]\n","demographics = \"Urban\" # @param [\"Urban\", \"Sub_Urban\", \"Rural\"]\n","profession = \"Student\" # @param [\"Software Engineer\", \"Student\", \"Marketer Manager\"]\n","income = 1000000 # @param {type:\"number\"}\n","inDebt = False # @param [\"False\", \"True\"] {type:\"raw\"}\n","isHomeOwner = True # @param [\"False\", \"True\"] {type:\"raw\"}\n","Owns_Car = True # @param [\"False\", \"True\"] {type:\"raw\"}\n","\n","input_data = {\n","    'age': [age],\n","    'gender': [gender],\n","    'platform': [platform],\n","    'interests': [interests],\n","    'location': [location],\n","    'demographics': [demographics],\n","    'profession': [profession],\n","    'income': [income],\n","    'indebt': [inDebt],\n","    'isHomeOwner': [isHomeOwner],\n","    'Owns_Car': [Owns_Car]\n","    }\n","\n","# Import both Training and Input Data\n","dummy_df = pd.read_csv('/content/drive//MyDrive/I310D/Data_Science_Girlies/dummy_data.csv')\n","input_df = pd.DataFrame(input_data)\n","print(f'Input Data\\n {input_df}\\n{divider}')\n","\n","# Combine both Input and Training Data to Categorize 'age' and 'income'\n","combined_df = pd.concat([dummy_df, input_df])\n","\n","age_quartiles = list(pd.qcut(combined_df['age'].values, q=3).categories)\n","age_bins = [0] + [age.right for age in age_quartiles]\n","input_df['age_range'] = pd.cut(input_df['age'], bins=age_bins, labels=['Young', 'Adult', 'Old'])\n","\n","income_quartiles = list(pd.qcut(combined_df['income'].values, q=3).categories)\n","income_bins = [0] + [income.right for income in income_quartiles]\n","input_df['income_type'] = pd.cut(input_df['age'], bins=income_bins, labels=['Poor', 'Mid', 'Rich'])\n","\n","# Encode Input Data after Categorization\n","encoded_df = featurize(input_df)\n","# print(f'After encoding\\n {encoded_df}\\n{divider}')\n","encoded_dataset = encoded_df.drop(['age', 'income'], axis=1)\n","# print(f'After dropping \"age\" and \"income\"\\n {encoded_dataset}\\n {divider}')\n","\n","# print('FINAL OUTPUT')\n","# # predict using regression the time_spent based on the test case values\n","predicted_screen_time = model.predict(encoded_dataset)\n","# predicted_screen_time\n","print(f\"Predicted screen time from Linear Regression Model: {predicted_screen_time[0]} hours\")"]}],"metadata":{"colab":{"provenance":[{"file_id":"1ffvvpdqiov6rhgJlbHkUFAwj9dzUANfH","timestamp":1713906450710},{"file_id":"1jd32CmkO4bP4QhWQYqp8losjY1kH1YA6","timestamp":1713887340982}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}